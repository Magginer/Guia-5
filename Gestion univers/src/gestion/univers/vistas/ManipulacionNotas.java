
package gestion.univers.vistas;

import gestion.univers.accesoADatos.*;
import gestion.univers.entidades.Alumno;
import gestion.univers.entidades.Materia;

import java.sql.*;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.EventObject;
import java.util.Iterator;
import java.util.List;

import javax.swing.table.DefaultTableModel;



public class ManipulacionNotas extends javax.swing.JInternalFrame {

    private Connection con = null;
    private ArrayList<Alumno> alumnoList;
    private AlumnoData alumnoData;
    private DefaultTableModel modelo;
    private InscripcionData inscripcion;
    Statement st;
    ResultSet rs;
    int id;
    
    
    public ManipulacionNotas() {
        initComponents();
        consultar();
 
        con = Conexion.getConexion();
        alumnoData= new AlumnoData();
        alumnoList =(ArrayList<Alumno>) alumnoData.ListarAlumnos();
        llenarcombo(); 
        
        modelo= (DefaultTableModel) carganotatabla.getModel();
        inscripcion= new InscripcionData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        carganotacombo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        carganotatabla = new javax.swing.JTable();
        guardarnotaboton = new javax.swing.JButton();
        salirnotaboton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setClosable(true);
        setIconifiable(true);

        jLabel1.setText("Carga de Notas");

        jLabel2.setText("Seleccione un alumno:");

        carganotacombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carganotacomboActionPerformed(evt);
            }
        });

        carganotatabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Nota"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(carganotatabla);

        guardarnotaboton.setText("Guardar");
        guardarnotaboton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarnotabotonActionPerformed(evt);
            }
        });

        salirnotaboton.setText("Salir");
        salirnotaboton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirnotabotonActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(144, 144, 144)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(carganotacombo, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(guardarnotaboton)
                                .addGap(153, 153, 153)
                                .addComponent(salirnotaboton)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel2))
                    .addComponent(carganotacombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guardarnotaboton)
                    .addComponent(salirnotaboton)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     private void llenarcombo () {
        
         carganotacombo.removeAllItems();
         for (Alumno alumno : alumnoList) {
             carganotacombo.addItem(alumno.toString());
         }
        
    }
    

  
     
     
     
     
     
    
    private void salirnotabotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirnotabotonActionPerformed
     
         this.dispose();
        
    }//GEN-LAST:event_salirnotabotonActionPerformed

    private void guardarnotabotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarnotabotonActionPerformed
        
         /*for (int i = 0; i < carganotatabla.getRowCount(); i++) {
            int materiaId = (int) carganotatabla.getValueAt(i, 0); // Suponiendo que la primera columna es el ID
            double nuevaNota = (double) carganotatabla.getValueAt(i, 2); // Suponiendo que la tercera columna es la calificación

            // Actualiza la calificación en tu estructura de datos (por ejemplo, base de datos) usando materiaId y nuevaNota
            // Aquí es donde actualizarías tu base de datos con las nuevas calificaciones
        }
        JOptionPane.showMessageDialog(null, "Calificaciones guardadas exitosamente.");
        */
        
        
        
        
    }//GEN-LAST:event_guardarnotabotonActionPerformed
        //  ESTE METODO NO ! ERROR DE CLICK  LINEA 219
    private void carganotacomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carganotacomboActionPerformed

    }//GEN-LAST:event_carganotacomboActionPerformed
        //  ESTE METODO NO ! ERROR DE CLICK  LINEA 219
 
    void consultar(){
    
            String sql ="SELECT inscripcion.idmateria, materia.nombre,"
                    + "inscripcion.nota FROM inscripcion "
                    + "INNER JOIN materia ON inscripcion.idmateria = materia.idmateria";
                    
                    
                 
               //+ "materia WHERE inscripcion.idmateria = materia.idmateria"
               // + "AND nota";
            
            try {
                con = Conexion.getConexion();
                st= con.createStatement();
                rs= st.executeQuery(sql);
                Object[] alumnos = new Object[3];
                modelo = (DefaultTableModel) carganotatabla.getModel();
                while (rs.next()){
                    alumnos [0] = rs.getInt("ID");
                    alumnos [1] = rs.getString("Nombre");
                    alumnos [2] = rs.getInt("Nota");
                    
                    modelo.addRow(alumnos);
                }
                carganotatabla.setModel(modelo);
        } catch (Exception e) {
        }
    
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> carganotacombo;
    private javax.swing.JTable carganotatabla;
    private javax.swing.JButton guardarnotaboton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton salirnotaboton;
    // End of variables declaration//GEN-END:variables
}
