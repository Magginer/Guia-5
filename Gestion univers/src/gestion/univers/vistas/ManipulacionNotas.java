/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestion.univers.vistas;

import gestion.univers.accesoADatos.AlumnoData;
import gestion.univers.accesoADatos.Conexion;
import gestion.univers.accesoADatos.InscripcionData;
import gestion.univers.accesoADatos.MateriaData;
import gestion.univers.entidades.Alumno;
import gestion.univers.entidades.Inscripcion;
import gestion.univers.entidades.Materia;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author javie
 */
public class ManipulacionNotas extends javax.swing.JInternalFrame {
    
private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean IsCellEditable(int Fila, int Columna) {

            return false;
        }
    };


    Connection con = null;
    ArrayList <Alumno>Alista;
    AlumnoData alumno = new AlumnoData();
    ArrayList<Inscripcion> Mlista;
    MateriaData materia = new MateriaData();
    int nota;
    int ida;
    int idm;
    int id;
    
    
    public ManipulacionNotas() {
        initComponents();
        
        modelo = new DefaultTableModel();
        con = Conexion.getConexion();
        Alista = new ArrayList();
        llenarcombo(); 
        armaCabeceraTabla();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        carganotacombo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        carganotatabla = new javax.swing.JTable();
        guardarnotaboton = new javax.swing.JButton();
        salirnotaboton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setClosable(true);
        setIconifiable(true);

        jLabel1.setText("Carga de Notas");

        jLabel2.setText("Seleccione un alumno:");

        carganotacombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carganotacomboActionPerformed(evt);
            }
        });

        carganotatabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Codigo", "Nombre", "Nota"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        carganotatabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carganotatablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(carganotatabla);

        guardarnotaboton.setText("Guardar");
        guardarnotaboton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarnotabotonActionPerformed(evt);
            }
        });

        salirnotaboton.setText("Salir");
        salirnotaboton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirnotabotonActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(carganotacombo, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(guardarnotaboton)
                        .addGap(153, 153, 153)
                        .addComponent(salirnotaboton)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel2))
                    .addComponent(carganotacombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guardarnotaboton)
                    .addComponent(salirnotaboton))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     private void llenarcombo () {
        
       carganotacombo.removeAllItems();
       Alista = (ArrayList) alumno.ListarAlumnos();
       Iterator iterador = Alista.iterator();
       while(iterador.hasNext()){
           Alumno alu = (Alumno) iterador.next();
           carganotacombo.addItem(alu);   
       }
        
    }
    public void armaCabeceraTabla() {

        //Titulos de Columnas
        //ArrayList<Object> columnas = new ArrayList<Object>();
        modelo.addColumn("Codigo");
        modelo.addColumn("Nombre");
        modelo.addColumn("Nota");

//        for (Object it : columnas) {  
//
//            modelo.addColumn(it);
//        }
        carganotatabla.setModel(modelo);

    }
    
    private void Borrarfila() {
        int fila = modelo.getRowCount() - 1;
        for (; fila >= 0; fila--) {
            modelo.removeRow(fila);
        }
    }
    
    public void llenartabla() {
        Borrarfila();
        InscripcionData inscripcion = new InscripcionData();
        

        Alumno alu = (Alumno) carganotacombo.getSelectedItem();
        Mlista = (ArrayList) inscripcion.ObtenerInscripcionesPorAlumno(alu.getIdAlumno());
        
        for (Inscripcion insc : Mlista) {
            
            modelo.addRow(new Object[]{insc.getMateria().getIdMateria(), insc.getMateria().getNombre(), insc.getNota()});
            
        }
    }
    
    public void actualizarnota(){
        AlumnoData alumno = new AlumnoData();
        Alumno idalumno = new Alumno(); 
        
        
        
       Alumno alu = (Alumno) carganotacombo.getSelectedItem();
       ida = alu.getIdAlumno();
       
       
       InscripcionData inscripcion = new InscripcionData();
       inscripcion.actualizarNota(ida, idm, nota);
        
       
    }
    
    
    private void salirnotabotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirnotabotonActionPerformed
     
         this.dispose();
        
    }//GEN-LAST:event_salirnotabotonActionPerformed
    private int nom = 0;
    
    private void carganotacomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carganotacomboActionPerformed
       nom=nom+1;
        
        if (nom == 2) {
             llenartabla();
        }
         nom=1;
    }//GEN-LAST:event_carganotacomboActionPerformed

    private void guardarnotabotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarnotabotonActionPerformed
        // TODO add your handling code here:
        actualizarnota();
        
    }//GEN-LAST:event_guardarnotabotonActionPerformed

    private void carganotatablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carganotatablaMouseClicked
        // TODO add your handling code here:
        int fila = carganotatabla.getSelectedRow();
        
        id = Integer.parseInt(this.carganotatabla.getValueAt(fila, 0).toString());
        idm = Integer.parseInt(carganotatabla.getValueAt(fila, 0).toString());
        nota = Integer.parseInt(carganotatabla.getValueAt(fila, 2).toString());
    }//GEN-LAST:event_carganotatablaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Alumno> carganotacombo;
    private javax.swing.JTable carganotatabla;
    private javax.swing.JButton guardarnotaboton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton salirnotaboton;
    // End of variables declaration//GEN-END:variables
}
